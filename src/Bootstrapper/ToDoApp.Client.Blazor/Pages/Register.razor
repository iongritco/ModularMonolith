@page "/register"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>Register</h1>

@if (displayErrors)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm Model="@registerModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary Model="@registerModel" />

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" Class="form-control" @bind-Value="@registerModel.Email" />
                <ValidationMessage For="@(() => registerModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" Class="form-control" @bind-Value="@registerModel.Password" />
                <ValidationMessage For="@(() => registerModel.Password)" />
            </div>
            <div class="form-group">
                <label for="password">Confirm Password</label>
                <InputText Id="password" type="password" Class="form-control" @bind-Value="@registerModel.ConfirmPassword" />
                <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {

    private RegisterModel registerModel = new RegisterModel();
    private bool displayErrors;
    private string errorMessage;

    private async Task HandleRegistration()
    {
        displayErrors = false;
        var result = await AuthService.Register(registerModel);
        if (string.IsNullOrWhiteSpace(result))
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            displayErrors = true;
            errorMessage = result;
        }
    }
}